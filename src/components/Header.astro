---
import ThemeToggle from './ThemeToggle';
import ScrollProgress from './ui/ScrollProgress.astro';
---

<header class="header" role="banner" style="scrollbar-width: none; -ms-overflow-style: none; overflow: hidden;">
  <div class="header-container" style="scrollbar-width: none; -ms-overflow-style: none; overflow: hidden;">
    <div class="header-content" style="scrollbar-width: none; -ms-overflow-style: none; overflow: hidden;">
      <!-- Contenedor del logo y menú en móviles -->
      <div style="display: flex; align-items: center; gap: 1rem;">
        <a href="/" class="logo" aria-label="Jairo Traine - Página de inicio">
          JAIRO TRAINE
        </a>
        <!-- Botón Menú Hamburguesa -->
        <button 
          id="menu-toggle" 
          class="mobile-menu-btn"
          aria-label="Abrir menú de navegación"
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <svg style="width: 1.5rem; height: 1.5rem;" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-4 6h-8" />
          </svg>
        </button>
      </div>

      <!-- Menú en pantallas grandes -->
      <nav class="nav-desktop" role="navigation" aria-label="Navegación principal">
        <a href="/" class="nav-link text-gray-700 dark:text-gray-300 hover:text-primary-dark dark:hover:text-primary-light font-medium transition-colors duration-200">Inicio</a>
        <a href="#about" class="nav-link text-gray-700 dark:text-gray-300 hover:text-primary-dark dark:hover:text-primary-light font-medium transition-colors duration-200">Sobre Mí</a>
        <a href="#servicios" class="nav-link text-gray-700 dark:text-gray-300 hover:text-primary-dark dark:hover:text-primary-light font-medium transition-colors duration-200">Servicios</a>
      </nav>

      <div style="display: flex; align-items: center; gap: 0.5rem;">
        <ThemeToggle client:load />
        <a href="/contacto" class="hidden md:inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-primary-dark hover:bg-primary rounded-lg transition-all duration-200 shadow-md hover:shadow-lg">
          <span class="text-white font-bold">Contáctame</span>
        </a>
      </div>
    </div>

    <!-- Menú móvil -->
    <nav id="mobile-menu" class="mobile-menu" role="navigation" aria-label="Navegación móvil" style="scrollbar-width: none; -ms-overflow-style: none; overflow: hidden;">
      <a href="/" class="mobile-menu-link text-gray-700 dark:text-gray-300 hover:text-primary-dark dark:hover:text-primary-light font-medium transition-colors duration-200">Inicio</a>
      <a href="#about" class="mobile-menu-link text-gray-700 dark:text-gray-300 hover:text-primary-dark dark:hover:text-primary-light font-medium transition-colors duration-200">Sobre Mí</a>
      <a href="#servicios" class="mobile-menu-link text-gray-700 dark:text-gray-300 hover:text-primary-dark dark:hover:text-primary-light font-medium transition-colors duration-200">Servicios</a>
      <a href="/contacto" class="inline-flex items-center justify-center px-6 py-3 text-base font-medium text-white bg-primary-dark hover:bg-primary rounded-lg transition-all duration-200 shadow-md hover:shadow-lg w-full max-w-xs">
        <span class="text-white font-bold">Contáctame</span>
      </a>
    </nav>
  </div>
  
  <!-- Scroll Progress Bar -->
  <ScrollProgress />
</header>

<script>
  function initializeMenu() {
    const menuToggle = document.getElementById('menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuLinks = document.querySelectorAll('.menu-link');
    const dropdownLinks = document.querySelectorAll('.dropdown-link'); // Links dentro de los dropdowns

    if (!menuToggle || !mobileMenu) return;

    // Reset de eventos para evitar duplicados
    menuToggle.removeEventListener('click', toggleMenu);
    menuLinks.forEach(link => link.removeEventListener('click', closeMenu));
    dropdownLinks.forEach(link => link.removeEventListener('click', handleDropdownClick));

    function toggleMenu() {
      const isHidden = mobileMenu.classList.contains('hidden');
      mobileMenu.classList.toggle('hidden');
      
      // Update ARIA attributes
      menuToggle.setAttribute('aria-expanded', !isHidden);
      menuToggle.setAttribute('aria-label', isHidden ? 'Cerrar menú de navegación' : 'Abrir menú de navegación');
    }

    function closeMenu() {
      mobileMenu.classList.add('hidden');
      // Update ARIA attributes when closing
      menuToggle.setAttribute('aria-expanded', 'false');
      menuToggle.setAttribute('aria-label', 'Abrir menú de navegación');
    }

    function handleDropdownClick(event) {
      event.preventDefault(); // Evita el comportamiento por defecto del enlace
      const sectionId = event.target.getAttribute('href'); // Obtiene el ID de la sección destino
      
      if (window.location.pathname !== '/') {
        // Si no estamos en la página principal, redirigir y luego desplazarse a la sección
        window.location.href = '/' + sectionId;
      } else {
        // Si ya estamos en la página principal, solo hacer scroll a la sección
        document.querySelector(sectionId)?.scrollIntoView({ behavior: 'smooth' });
      }
      
      closeMenu(); // Cierra el menú después de hacer clic
    }

    // Agregar eventos nuevamente
    menuToggle.addEventListener('click', toggleMenu);
    menuLinks.forEach(link => link.addEventListener('click', closeMenu));
    dropdownLinks.forEach(link => link.addEventListener('click', handleDropdownClick));
  }

  // Inicializar el menú cuando la página carga
  document.addEventListener('DOMContentLoaded', initializeMenu);
  document.addEventListener('astro:after-swap', initializeMenu); // Reaplicar en frameworks con navegación en cliente
</script>


